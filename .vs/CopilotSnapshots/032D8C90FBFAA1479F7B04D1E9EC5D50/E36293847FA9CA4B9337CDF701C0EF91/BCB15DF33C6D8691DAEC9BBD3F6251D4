using System.Collections.Generic;
using System.Linq;
using ExpenseManager.Services.Prediction;
using ExpenseManager.Utils;

namespace ExpenseManager.Services.Prediction {
    public class RuleBasedClassifier : IExpenseClassifier {
        private Dictionary<string, List<string>> categoryRules;
        
        public RuleBasedClassifier() {
            InitializeRules();
        }

        private void InitializeRules() {
            categoryRules = new Dictionary<string, List<string>> {
                {
                    "An Uong", 
                    new List<string> { "an", "uong", "com", "pho", "banh", "tra", "ca phe", "nuoc", "chao", "hu tieu", "mien" }
                },
                {
                    "Mua Sam", 
                    new List<string> { "mua", "giay", "quan", "ao", "shopee", "tiki", "lazada", "tiktok", "but", "vo", "balo" }
                },
                {
                    "Giai Tri", 
                    new List<string> { "xem", "phim", "game", "hat", "nhac", "choi", "di choi", "rap", "cinema" }
                }
            };
        }

        public string Classify(string description) {
            if (string.IsNullOrWhiteSpace(description)) {
                return "Khac";
            }

            string lowerDescription = description.ToLower();
            
            foreach (var categoryRule in categoryRules) {
                string category = categoryRule.Key;
                List<string> keywords = categoryRule.Value;
                
                foreach (string keyword in keywords) {
                    if (lowerDescription.Contains(keyword)) {
                        return category;
                    }
                }
            }
            
            return "Khac";
        }

        public Dictionary<string, List<string>> GetRules() {
            return new Dictionary<string, List<string>>(categoryRules);
        }

        public void AddKeyword(string category, string keyword) {
            if (categoryRules.ContainsKey(category)) {
                if (!categoryRules[category].Contains(keyword.ToLower())) {
                    categoryRules[category].Add(keyword.ToLower());
                }
            }
        }
    }
}